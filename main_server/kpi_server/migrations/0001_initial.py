# Generated by Django 4.1 on 2024-01-30 06:46

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="UserAuth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notes_id",
                    models.CharField(help_text="用户notesid", max_length=8, unique=True),
                ),
                ("user_uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "user_phone",
                    models.CharField(default=0, help_text="手机号码", max_length=16),
                ),
                ("user_email", models.EmailField(help_text="用户邮箱", max_length=254)),
                ("user_password", models.CharField(help_text="加密用户密码", max_length=128)),
                ("user_state", models.IntegerField(default=0, help_text="用户状态")),
                ("is_su", models.BooleanField(default=False, help_text="是否超级管理员")),
                ("is_admin", models.BooleanField(default=False, help_text="是否普通管理员")),
                ("user_create", models.DateTimeField(help_text="创建时间")),
                ("user_update", models.DateTimeField(help_text="修改时间")),
            ],
            options={
                "db_table": "user_auth",
            },
        ),
        migrations.CreateModel(
            name="CodeMsg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("err_code", models.IntegerField(help_text="回复代码")),
                ("code_type", models.IntegerField(help_text="代码分类")),
                ("err_msg", models.CharField(help_text="错误信息", max_length=128)),
                ("err_ext", models.CharField(help_text="额外内容", max_length=128)),
            ],
            options={
                "db_table": "code_msg",
            },
        ),
        migrations.CreateModel(
            name="DashboardMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("db_mark", models.CharField(help_text="看板标识", max_length=48)),
                ("db_name", models.CharField(help_text="看板名称", max_length=128)),
                ("db_class", models.IntegerField(help_text="数据分类")),
                ("index_num", models.CharField(help_text="关联指标", max_length=256)),
                ("db_func", models.CharField(help_text="对应方法", max_length=64)),
                ("db_state", models.IntegerField(help_text="看板状态")),
                ("db_ext", models.CharField(help_text="其他额外描述", max_length=128)),
                ("db_create", models.DateTimeField(help_text="创建时间")),
                ("db_update", models.DateTimeField(help_text="更新时间")),
            ],
            options={
                "db_table": "dashboard_map",
            },
        ),
        migrations.CreateModel(
            name="Index",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "index_num",
                    models.CharField(help_text="指标编号", max_length=30, unique=True),
                ),
                ("index_class", models.IntegerField(help_text="指标分类-财务效益等")),
                ("belong_line", models.IntegerField(help_text="归属条线-企金、零售、同业其他等")),
                ("index_unit", models.CharField(help_text="指标单位", max_length=10)),
                ("index_fre", models.IntegerField(help_text="指标频率")),
                ("index_name", models.CharField(help_text="指标名称", max_length=64)),
                ("index_type", models.IntegerField(help_text="指标类型-个人、机构")),
                ("need_focus", models.IntegerField(help_text="是否重点指标")),
                ("need_show", models.IntegerField(help_text="是否需要展示")),
                ("is_db", models.IntegerField(help_text="是否首页数据看板")),
                ("index_create", models.DateTimeField(help_text="创建时间")),
                ("index_update", models.DateTimeField(auto_now=True, help_text="修改时间")),
                ("index_state", models.IntegerField(help_text="指标状态")),
                ("index_ext_info", models.CharField(help_text="扩展字段", max_length=64)),
                (
                    "parent_index",
                    models.CharField(
                        blank=True, help_text="上级指标", max_length=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "index_info",
            },
        ),
        migrations.CreateModel(
            name="IndexDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "detail_id",
                    models.CharField(blank=True, help_text="上传记录编号", max_length=48),
                ),
                ("index_num", models.CharField(help_text="指标编号", max_length=10)),
                (
                    "detail_value",
                    models.DecimalField(
                        decimal_places=2, help_text="指标具体值", max_digits=18
                    ),
                ),
                ("detail_date", models.DateField(help_text="详情归属月份")),
                ("detail_type", models.IntegerField(help_text="详情种类,是实际值还是计划值等")),
                ("detail_class", models.IntegerField(help_text="详情归属，是个人还是机构")),
                (
                    "detail_belong",
                    models.CharField(help_text="详情归属对象, 机构编号或者notesid", max_length=10),
                ),
                ("detail_create", models.DateTimeField(help_text="创建时间")),
                (
                    "detail_update",
                    models.DateTimeField(auto_now=True, help_text="修改时间"),
                ),
                ("detail_state", models.IntegerField(help_text="详情状态")),
                ("detail_ext_info", models.CharField(help_text="扩展字段", max_length=64)),
            ],
            options={
                "db_table": "index_detail",
            },
        ),
        migrations.CreateModel(
            name="Org",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "org_num",
                    models.CharField(help_text="机构编号", max_length=10, unique=True),
                ),
                ("org_name", models.CharField(help_text="机构名称", max_length=64)),
                ("parent_org_id", models.CharField(help_text="上级机构编号", max_length=8)),
                ("org_level", models.IntegerField(help_text="机构层级")),
                ("org_group", models.IntegerField(help_text="机构分组")),
                ("org_manager", models.CharField(help_text="机构负责人id", max_length=8)),
                (
                    "org_create",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("org_update", models.DateTimeField(auto_now=True, help_text="修改时间")),
                ("org_state", models.IntegerField(help_text="机构状态")),
                ("org_ext_info", models.CharField(help_text="机构扩展字段", max_length=64)),
            ],
            options={
                "db_table": "org_info",
            },
        ),
        migrations.CreateModel(
            name="UploadDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "detail_id",
                    models.CharField(help_text="历史记录编号", max_length=48, unique=True),
                ),
                ("record_id", models.CharField(help_text="上传记录编号", max_length=24)),
                ("detail_active", models.IntegerField(help_text="该版本是否对外生效")),
                (
                    "detail_update_user",
                    models.CharField(help_text="历史上传人员notesid", max_length=10),
                ),
                (
                    "detail_update_fileName",
                    models.CharField(help_text="历史记录上传文件名称", max_length=128),
                ),
                (
                    "detail_update_fileMD5",
                    models.CharField(default="", help_text="文件MD5值", max_length=128),
                ),
                ("detail_state", models.IntegerField(help_text="历史记录状态")),
                (
                    "detail_create",
                    models.DateField(auto_now_add=True, help_text="创建时间"),
                ),
                ("detail_update", models.DateField(auto_now=True, help_text="修改时间")),
                (
                    "detail_ext_info",
                    models.CharField(help_text="历史记录扩展字段", max_length=64),
                ),
            ],
            options={
                "db_table": "upload_detail",
            },
        ),
        migrations.CreateModel(
            name="UploadRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_id",
                    models.CharField(help_text="上传记录编号", max_length=24, unique=True),
                ),
                ("record_class", models.IntegerField(help_text="上传记录分类")),
                ("record_date", models.DateField(help_text="上传归属时间")),
                (
                    "record_update_user",
                    models.CharField(help_text="上传用户notesid", max_length=10),
                ),
                (
                    "record_update_time",
                    models.DateTimeField(auto_now=True, help_text="上传时间"),
                ),
                ("record_update_state", models.IntegerField(help_text="该条记录状态")),
                ("record_create", models.DateTimeField(help_text="创建时间")),
                (
                    "record_update",
                    models.DateTimeField(auto_now=True, help_text="修改时间"),
                ),
                (
                    "record_update_ext_info",
                    models.CharField(help_text="扩展字段", max_length=64),
                ),
            ],
            options={
                "db_table": "upload_record",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notes_id",
                    models.CharField(help_text="用户notesid", max_length=8, unique=True),
                ),
                ("user_name", models.CharField(help_text="用户姓名", max_length=64)),
                (
                    "user_belong_org",
                    models.CharField(help_text="用户归属机构", max_length=10),
                ),
                ("user_belong_group", models.IntegerField(help_text="用户所属分组/条线")),
                ("user_character", models.IntegerField(help_text="用户角色")),
                (
                    "user_ext_info",
                    models.CharField(help_text="用户信息补充字段", max_length=64),
                ),
            ],
            options={
                "db_table": "user_info",
            },
        ),
        migrations.CreateModel(
            name="UserToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notes_id",
                    models.CharField(help_text="用户notesid", max_length=8, unique=True),
                ),
                ("rf_token_dt", models.DateTimeField(help_text="上次refresh_token刷新时间")),
                ("ac_token_dt", models.DateTimeField(help_text="上次access_token刷新时间")),
                (
                    "rf_avalale",
                    models.BooleanField(default=True, help_text="能否获取refresh_token"),
                ),
                (
                    "ac_avalale",
                    models.BooleanField(default=True, help_text="能否获取refresh_token"),
                ),
                ("login_err", models.IntegerField(default=0, help_text="登陆错误次数")),
            ],
            options={
                "db_table": "user_token",
            },
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref_name", models.CharField(help_text="码值含义", max_length=64)),
                ("ref_code", models.IntegerField(help_text="码值")),
                ("ref_type", models.CharField(help_text="码值用途", max_length=64)),
                ("ref_state", models.IntegerField(help_text="是否有效")),
                ("ref_ext", models.CharField(help_text="码值额外描述", max_length=128)),
            ],
            options={
                "db_table": "reference_code",
                "unique_together": {("ref_type", "ref_code")},
            },
        ),
    ]
